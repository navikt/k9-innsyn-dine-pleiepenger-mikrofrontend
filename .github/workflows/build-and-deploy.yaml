name: "Build and deploy"
on:
  push:
    branches:
      - "main"
      - "dev-*"
env:
  "IMAGE": "ghcr.io/${{ github.repository }}/k9-innsyn-dine-pleiepenger-mikrofrontend:${{ github.sha }}"
jobs:
  build:
    name: "build"
    runs-on: "ubuntu-latest"

    permissions:
      contents: "read"
      id-token: "write"
      packages: "write"

    outputs:
      upload_url: ${{ steps.extract-manifest-url.outputs.upload_url }}

    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-node@v3"
        with:
          node-version: 16
          registry-url: "https://npm.pkg.github.com"
          cache: "npm"
      - name: "Install dependencies"
        run: "npm ci"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: "Build application"
        run: "npm run build"

      - id: cdn-upload
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-team-name: dusseldorf
          source: ./dist/
          destination: "k9-innsyn-dine-pleiepenger-mikrofrontend"

      - name: Extract manifest url
        id: extract-manifest-url
        run: |
          files="${{ steps.cdn-upload.outputs.uploaded }}"
          first_file=$(echo $files | cut -d',' -f1)
          echo "upload_url=https://cdn.nav.no/$first_file" >> $GITHUB_OUTPUT

      - name: "Build and publish Docker image"
        run: "docker build --pull --tag ${IMAGE} . && echo $GITHUB_TOKEN | docker login\
          \ --username $GITHUB_REPOSITORY --password-stdin https://ghcr.io\
          \ && docker push ${IMAGE}"
        env:
          "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}"

  update-manifest-dev-gcp:
    uses: navikt/tms-deploy/.github/workflows/oppdater-mikrofrontend-manifest.yaml@main
    needs: build
    with:
      cluster: dev-gcp
      id: "pleiepenger-innsyn"
      url: ${{needs.build.outputs.upload_url}}
    secrets: inherit

  update-manifest-prod-gcp:
    if: github.ref == 'refs/heads/main'
    uses: navikt/tms-deploy/.github/workflows/oppdater-mikrofrontend-manifest.yaml@main
    needs: build
    with:
      cluster: prod-gcp
      id: "pleiepenger-innsyn"
      url: ${{needs.build.outputs.upload_url}}
    secrets: inherit

  deploy-dev:
    runs-on: "ubuntu-latest"
    needs: "build"
    steps:
      - uses: "actions/checkout@v3"
      - name: "Deploy to dev"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml
          VARS: nais/dev-gcp.json

#  deploy-prod:
#    if: github.ref == 'refs/heads/main'
#    runs-on: "ubuntu-latest"
#    needs: "build"
#    steps:
#      - uses: "actions/checkout@v3"
#      - name: "Deploy to prod"
#        uses: "nais/deploy/actions/deploy@v1"
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-gcp
#          RESOURCE: nais/nais.yaml
#          VARS: nais/prod-gcp.json
